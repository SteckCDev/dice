import math
from datetime import datetime

from common.formatting.emojis import get_balance_emoji
from common.formatting.html import (
    bold,
    cursive,
    link,
)
from core.schemas.pvp import (
    PVPDTO,
    PVPDetailsDTO,
)
from core.schemas.user import (
    UserDTO,
    UserCacheDTO,
)


class Messages:
    @staticmethod
    def start() -> str:
        return f"{bold('–†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –î–∞–π—Å üëã')}\n\n" \
               f"{cursive('üé≤ –ö—É–±–∏–∫ –∫—Ä—É—Ç–∏—Ç—Å—è - –∫—ç—à –º—É—Ç–∏—Ç—Å—è')}\n\n" \
               f"- {bold('/balance')} - —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å\n" \
               f"- {bold('/profile')} - –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é\n" \
               f"- {bold('/pvb')} - –∏–≥—Ä–∞ —Å –±–æ—Ç–æ–º\n" \
               f"- {bold('/pvp')} - –∏–≥—Ä–∞ —Å —Å–æ–ø–µ—Ä–Ω–∏–∫–æ–º\n" \
               f"- {bold('/pvpc')} - –∏–≥—Ä–∞ —Å —Å–æ–ø–µ—Ä–Ω–∏–∫–æ–º –≤ —á–∞—Ç–µ\n" \
               f"- {bold('/lottery')} - —Ä–æ–∑—ã–≥—Ä—ã—à–∏\n" \
               f"- {bold('/support')} - –ø–æ–¥–¥–µ—Ä–∂–∫–∞"

    @staticmethod
    def balance(balance: int, beta_balance: int) -> str:
        return f"üíµ –í–∞—à –±–∞–ª–∞–Ω—Å: {bold(balance)} RUB\n" \
               f"üí¥ –ë–µ—Ç–∞-–±–∞–ª–∞–Ω—Å: {bold(beta_balance)} RUB"

    @staticmethod
    def game_mode_disabled() -> str:
        return f"üîß –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —ç—Ç–æ—Ç —Ä–µ–∂–∏–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ {bold('–ø–ª–∞–Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç–∞—Ö')}, " \
               f"–≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –ø–æ–∑–∂–µ"

    @staticmethod
    def balance_is_not_enough() -> str:
        return "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–∞–Ω—Å–∞"

    @staticmethod
    def bet_out_of_limits(min_bet: int, max_bet: int) -> str:
        return f"üîî –°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –º–µ–∂–¥—É {min_bet} –∏ {max_bet}"

    @staticmethod
    def pvb_in_process() -> str:
        return "üé≤ –í—ã –≤—Å—ë –µ—â—ë –≤ –∏–≥—Ä–µ –∏ —Ç—Ä—è—Å—ë—Ç–µ –∫–æ—Å—Ç—å –≤ –ª–∞–¥–æ–Ω—è—Ö. –°–Ω–∞—á–∞–ª–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ –∏–≥—Ä—É, –±—Ä–æ—Å–∏–≤ –∫—É–±–∏–∫"

    @staticmethod
    def pvb_non_direct() -> str:
        return "üõë –í—Ö–æ–¥ —Å –Ω–∞–º–∞–≥–Ω–∏—á–µ–Ω–Ω—ã–º–∏ –∫—É–±–∏–∫–∞–º–∏ –∑–∞–ø—Ä–µ—â—ë–Ω!"

    @staticmethod
    def pvb_bots_turn() -> str:
        return bold("ü§ñ –ë—Ä–æ—Å–∞–µ—Ç –±–æ—Ç")

    @staticmethod
    def pvb_your_turn() -> str:
        return bold("üé≤ –ë—Ä–æ—Å—å—Ç–µ –∫—É–±–∏–∫!")

    @staticmethod
    def pvp_already_started(game_id: int, beta_mode: bool) -> str:
        return f"{bold(f'üé≤ –ò–≥—Ä–∞ #{game_id:03}')}{cursive(' - –±–µ—Ç–∞-—Ä–µ–∂–∏–º') if beta_mode else ''}\n\n" \
               f"‚ùå –ö –∏–≥—Ä–µ —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é"

    @staticmethod
    def pvp_creator_late(game_id: int, beta_mode: bool) -> str:
        return f"{bold(f'üé≤ –ò–≥—Ä–∞ #{game_id:03}')}{cursive(' - –±–µ—Ç–∞-—Ä–µ–∂–∏–º') if beta_mode else ''}\n\n" \
               f"‚åõ –í—Ä–µ–º—è –≤—ã—à–ª–æ, –±–æ—Ç –±—Ä–æ—Å–∏–ª –∫–æ—Å—Ç—å –∑–∞ –≤–∞—Å"

    @staticmethod
    def force_to_subscribe() -> str:
        return f"üîî –î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ—Å—Ç–æ—è—Ç—å –≤ —Å–ª–µ–¥—É—é—â–∏—Ö —á–∞—Ç–∞—Ö:\n" \
               f" 1. {link('–ø–µ—Ä–≤—ã–π —á–∞—Ç', 'https://google.com')}\n" \
               f" 2. {link('–≤—Ç–æ—Ä–æ–π —á–∞—Ç', 'https://google.com')}"

    @staticmethod
    def games(selected_balance: int, beta_mode: bool) -> str:
        return f"{bold('üé≤ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∏–≥—Ä—ã')}\n\n" \
               f"{get_balance_emoji(beta_mode)} –í–∞—à –±–∞–ª–∞–Ω—Å: {bold(selected_balance)} RUB"

    @staticmethod
    def profile(name: str, balance: int, beta_balance: int, joined_at: datetime, games_count: int) -> str:
        return f"–ò–º—è: {bold(name)}\n" \
               f"–ë–∞–ª–∞–Ω—Å: {bold(balance)}\n" \
               f"–ë–µ—Ç–∞-–±–∞–ª–∞–Ω—Å: {bold(beta_balance)}\n" \
               f"–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {bold(joined_at)} (UTC)\n" \
               f"–í—Å–µ–≥–æ –∏–≥—Ä: {bold(games_count)}"

    @staticmethod
    def lottery() -> str:
        return "üéâ –î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö –≤—Å—Ç—É–ø–∏—Ç–µ –≤ —á–∞—Ç"

    @staticmethod
    def support() -> str:
        return "ü§ñ –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –Ω–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É"

    @staticmethod
    def terms_and_conditions() -> str:
        return f"{bold('üìã –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã')}\n\n" \
               f"1. –ü–µ—Ä–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ –±–æ–π—Ü–æ–≤—Å–∫–æ–≥–æ –∫–ª—É–±–∞"

    @staticmethod
    def pvb(balance: int, beta_mode: bool) -> str:
        return f"{bold('ü§ñ –ò–≥—Ä–∞ —Å –±–æ—Ç–æ–º')}{cursive(' - –±–µ—Ç–∞-—Ä–µ–∂–∏–º') if beta_mode else ''}\n\n" \
               f"{get_balance_emoji(beta_mode)} –í–∞—à –±–∞–ª–∞–Ω—Å: {bold(balance)}"

    @staticmethod
    def pvb_instruction() -> str:
        return f"{bold('ü§ñ –ò–≥—Ä–∞ —Å –±–æ—Ç–æ–º - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è')}"

    @staticmethod
    def pvb_create(bots_turn_first: bool, beta_mode: bool, selected_balance: int, bet: int) -> str:
        balance_emoji = get_balance_emoji(beta_mode)

        return f"{bold('ü§ñ –ò–≥—Ä–∞ —Å –±–æ—Ç–æ–º')}{cursive(' - –±–µ—Ç–∞-—Ä–µ–∂–∏–º') if beta_mode else ''}\n\n" \
               f"{balance_emoji} –í–∞—à –±–∞–ª–∞–Ω—Å: {bold(selected_balance)}\n" \
               f"{balance_emoji} –°—Ç–∞–≤–∫–∞: {bold(bet)}\n" \
               f"üîÅ –ü–µ—Ä–≤—ã–º {bold('–±—Ä–æ—Å–∞–µ—Ç –±–æ—Ç' if bots_turn_first else '–±—Ä–æ—Å–∞–µ—Ç–µ –≤—ã')}"

    @staticmethod
    def pvb_result(beta_mode: bool, selected_balance: int, player_won: bool | None, game_id: int) -> str:
        if player_won is None:
            result = "‚úå –ù–∏—á—å—è! –°–¥–µ–ª–∞–π—Ç–µ —Å—Ç–∞–≤–∫—É –µ—â—ë —Ä–∞–∑"
        elif player_won:
            result = "üî• –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!"
        else:
            result = "üíÄ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!"

        return f"üé≤ –ò–≥—Ä–∞ #{game_id:03}{cursive(' - –±–µ—Ç–∞-—Ä–µ–∂–∏–º') if beta_mode else ''}\n\n" \
               f"{result}\n" \
               f"{get_balance_emoji(beta_mode)} –í–∞—à –±–∞–ª–∞–Ω—Å: {bold(selected_balance)}"

    @staticmethod
    def pvb_history(wins_percent: int) -> str:
        return f"üé≤ –í–∞—à –ø—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥: {bold(f'{wins_percent:.1f}%')}"

    @staticmethod
    def pvp(available_pvp_games: int, page: int = 1) -> str:
        if available_pvp_games == 0:
            return bold("üé≤ –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–≥—Ä")

        pages_total = math.ceil(available_pvp_games / 5)

        return f"{bold(f'üé≤ –î–æ—Å—Ç—É–ø–Ω–æ {available_pvp_games} –∏–≥—Ä')}\n\n" \
               f"üìã –°—Ç—Ä–∞–Ω–∏—Ü–∞: {bold(f'{page} / {pages_total}')}"

    @staticmethod
    def pvp_instruction() -> str:
        return "üé≤ –í—ã –º–æ–∂–µ—Ç–µ, –ª–∏–±–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∏–≥—Ä–µ, –ª–∏–±–æ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ—é\n" \
               "- –ï—Å–ª–∏ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∏–≥—Ä—É –≤—Å—Ç—É–ø–∞–µ—Ç –∏–≥—Ä–æ–∫ –∏ –±—Ä–æ—Å–∞–µ—Ç –∫—É–±–∏–∫, " \
               "—É —Å–æ–∑–¥–∞—Ç–µ–ª—è –∏–≥—Ä—ã –µ—Å—Ç—å –º–∏–Ω—É—Ç–∞ —á—Ç–æ–±—ã –±—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫ –≤ –æ—Ç–≤–µ—Ç, –∏–Ω–∞—á–µ —ç—Ç–æ —Å–¥–µ–ª–∞–µ—Ç –±–æ—Ç\n" \
               "- –ï—Å–ª–∏ –∏–≥—Ä—É –Ω–µ –ø—Ä–∏–Ω—è–ª–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 72 —á–∞—Å–æ–≤, –æ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è " \
               "–∏ —Å—Ç–∞–≤–∫–∞ –∑–∞—á–∏—Å–ª—è–µ—Ç—Å—è –æ–±—Ä–∞—Ç–Ω–æ –Ω–∞ –±–∞–ª–∞–Ω—Å —Å–æ–∑–¥–∞—Ç–µ–ª—è"

    @staticmethod
    def pvp_details(user: UserDTO, pvp_details: PVPDetailsDTO) -> str:
        if user.tg_id == pvp_details.creator_tg_id:
            cancel_caption = ""

            if pvp_details.cancellation_unlocks_in:
                cancel_caption = f"–ò–≥—Ä—É –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å —á–µ—Ä–µ–∑ " \
                                 f"{pvp_details.cancellation_unlocks_in.seconds // 60} –º–∏–Ω—É—Ç"

            return f"üé≤ –ò–≥—Ä–∞ #{pvp_details.id:03}{cursive(' - –±–µ—Ç–∞-—Ä–µ–∂–∏–º') if pvp_details.beta_mode else ''} {bold('[–í–∞—à–∞]')}\n\n" \
                   f"{get_balance_emoji(pvp_details.beta_mode)} –°—Ç–∞–≤–∫–∞: {bold(pvp_details.bet)}\n\n" \
                   f"{cancel_caption}"

        balance_for_mode = user.beta_balance if pvp_details.beta_mode else user.balance

        if balance_for_mode >= pvp_details.bet:
            join_caption = bold("–ß—Ç–æ–±—ã –≤—Å—Ç—É–ø–∏—Ç—å –≤ –∏–≥—Ä—É –±—Ä–æ—Å—å—Ç–µ –∫–æ—Å—Ç—å")
        else:
            join_caption = bold("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–∞–Ω—Å–∞ —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ")

        return f"üé≤ –ò–≥—Ä–∞ #{pvp_details.id:03}" \
               f"{cursive(' - –±–µ—Ç–∞-—Ä–µ–∂–∏–º') if pvp_details.beta_mode else ''} {bold(' [–í–∞—à–∞]')}\n\n" \
               f"ü§ô –°–æ–ø–µ—Ä–Ω–∏–∫: {bold(pvp_details.creator_name)}\n\n" \
               f"{get_balance_emoji(pvp_details.beta_mode)}: {bold(balance_for_mode)}\n" \
               f"{get_balance_emoji(pvp_details.beta_mode)} –°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏: {bold(pvp_details.bet)}\n\n" \
               f"{join_caption}"

    @staticmethod
    def pvp_cancel(game_id: int) -> str:
        return bold(f'‚úÖ –ò–≥—Ä–∞ #{game_id:03} —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞, –±–∞–ª–∞–Ω—Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')

    @staticmethod
    def pvp_create(user_cache: UserCacheDTO, min_bet: int, max_bet: int) -> str:
        return f"{bold('üë• –ò–≥—Ä–∞ —Å —Å–æ–ø–µ—Ä–Ω–∏–∫–æ–º')} {cursive(' - –±–µ—Ç–∞-—Ä–µ–∂–∏–º') if user_cache.beta_mode else ''}\n\n" \
               f"{get_balance_emoji(user_cache.beta_mode)} –°—Ç–∞–≤–∫–∞: {bold(user_cache.pvp_bet)}\n\n" \
               f"{cursive(f'–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏ –æ—Ç {min_bet} RUB –¥–æ {max_bet} RUB')}"

    @staticmethod
    def pvp_confirm(game_id: int, user_cache: UserCacheDTO) -> str:
        return f"{bold(f'üé≤ –ò–≥—Ä–∞ #{game_id:03} —Å–æ–∑–¥–∞–Ω–∞!')} " \
               f"{cursive(' - –±–µ—Ç–∞-—Ä–µ–∂–∏–º') if user_cache.beta_mode else ''}\n\n" \
               f"{get_balance_emoji(user_cache.beta_mode)} –°—Ç–∞–≤–∫–∞: {bold(user_cache.pvp_bet)}"

    @staticmethod
    def pvp_join(game_id: int, beta_mode: bool) -> str:
        return f"{bold(f'üé≤ –ò–≥—Ä–∞ #{game_id:03}')}{cursive(' - –±–µ—Ç–∞-—Ä–µ–∂–∏–º') if beta_mode else ''}\n\n" \
               f"–ñ–¥—ë–º –±—Ä–æ—Å–æ–∫ –∏–≥—Ä–æ–∫–∞ –º–∏–Ω—É—Ç—É, –∏–Ω–∞—á–µ –±–æ—Ç –±—Ä–æ—Å–∏—Ç –∫–æ—Å—Ç—å –∑–∞ –Ω–µ–≥–æ"

    @staticmethod
    def pvp_started(game_id: int, beta_mode: bool, bet: int, opponent_tg_name: str) -> str:
        return f"{bold(f'üé≤ –ò–≥—Ä–∞ #{game_id:03}')}{cursive(' - –±–µ—Ç–∞-—Ä–µ–∂–∏–º') if beta_mode else ''}\n\n" \
               f"ü§ô –°–æ–ø–µ—Ä–Ω–∏–∫: {bold(opponent_tg_name)}\n" \
               f"{get_balance_emoji(beta_mode)} –°—Ç–∞–≤–∫–∞: {bold(bet)}\n\n" \
               f"–ë—Ä–æ—Å—å—Ç–µ –∫–æ—Å—Ç—å –∏–ª–∏ —ç—Ç–æ —Å–¥–µ–ª–∞–µ—Ç –±–æ—Ç!"

    @staticmethod
    def pvp_finished(pvp: PVPDTO, user: UserDTO, opponent: UserDTO) -> str:
        opponent_dice = pvp.creator_dice if opponent.tg_id == pvp.creator_tg_id else pvp.opponent_dice

        if pvp.winner_tg_id is None:
            result: str = "‚úå –ù–∏—á—å—è!"
        else:
            result: str = "üî• –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!" if pvp.winner_tg_id == user.tg_id else "üíÄ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!"

        return f"{bold(f'üé≤ –ò–≥—Ä–∞ #{pvp.id:03}')}{cursive(' - –±–µ—Ç–∞-—Ä–µ–∂–∏–º') if pvp.beta_mode else ''}\n\n" \
               f"ü§ô {opponent.tg_name} –≤—ã–±—Ä–æ—Å–∏–ª {bold(opponent_dice)}\n" \
               f"{result}\n" \
               f"{get_balance_emoji(pvp.beta_mode)} –í–∞—à –±–∞–ª–∞–Ω—Å: " \
               f"{bold(user.beta_balance if pvp.beta_mode else user.balance)}"

    @staticmethod
    def pvpc() -> str:
        return "‚öî –î–ª—è –∏–≥—Ä—ã —Å —Å–æ–ø–µ—Ä–Ω–∏–∫–æ–º –≤ —á–∞—Ç–µ, –≤—Å—Ç—É–ø–∏—Ç–µ –≤ –Ω–∞—à —á–∞—Ç"

    @staticmethod
    def terms_accepted() -> str:
        return f"üé≤ –•–æ—Ä–æ—à–µ–π –∏–≥—Ä—ã!"

    @staticmethod
    def terms_rejected() -> str:
        return f"‚ùå –ò–≥—Ä–∞ —Å –±–æ—Ç–æ–º –≤–æ–∑–º–æ–∂–Ω–∞ {bold('—Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—è—Ç–∏—è –ø—Ä–∞–≤–∏–ª –∏–≥—Ä—ã')}"

    @staticmethod
    def admin(users_since_launch: int) -> str:
        return f"{bold('üé≤ –î–∞–π—Å / –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å')}\n\n" \
               f"üôã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –∑–∞–ø—É—Å–∫–∞: {bold(users_since_launch)}\n\n" \
               f"{bold('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:')} " \
               f"—Ä–µ–∫–≤–∏–∑–∏—Ç—ã, –±–∞–ª–∞–Ω—Å, —á–∞—Ç, –∫–æ–º–∏—Å—Å–∏—è (–±–æ—Ç, p2p, —á–∞—Ç, –±–∞–Ω–∫, –±–∏—Ç–∫–æ–∏–Ω), —Å—Ç–∞–≤–∫–∞ (–º–∏–Ω–∏–º—É–º, –º–∞–∫—Å–∏–º—É–º), " \
               f"—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è (–º–∏–Ω–∏–º—É–º, –±–∏—Ç–∫–æ–∏–Ω), –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ (—Å—É–º–º–∞, –ø–µ—Ä–∏–æ–¥), —Å—É–º–º–∞, –ø–µ—Ä–∏–æ–¥\n\n" \
               f"–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ–º–∞–Ω–¥—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Ç–æ–ª—å–∫–æ –µ—ë –∏–º—è –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, " \
               f"–Ω–∞–ø—Ä–∏–º–µ—Ä, - \"–∫–æ–º–∏—Å—Å–∏—è\""
